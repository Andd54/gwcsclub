I"_<h2 id="1-进制系统">1. 进制系统</h2>

<blockquote>
  <p>如果你对这个部分已经非常了解，请直接跳到 “1.5 题目” 的章节。把所有题目完成，比赛就随便考了。</p>
</blockquote>

<p>进制系统是现在主流的计数系统。比如我们从小学的十进制就是一个以十为基数的进制系统。一个进制系统有以下特性</p>

<ol>
  <li>由 <u>**有限个符号**</u> 构成。一般我们会使用阿拉伯数字0-9作为计数符号，在某些需要更多符号的情况下也会用上英文字母。比如在十六进制中，我们用 A 代表 10, B 代表 11, C 代表 12, D 代表 13, E 代表 14, F 代表 15</li>
  <li>这些符号有大小之分。数数的本质，其实是不断比上一个数大一点点</li>
  <li>每一个数会有若干位。每一位上可以放一个该计数系统的符号。如果要表示的数超过了这若干位能表示的范围，那么可以在数的左边继续增加符号</li>
</ol>

<h3 id="11-n进制转十进制">1.1 N进制转十进制</h3>

<p>如果一个 m 位的 n 进制数可以写成以下的形式，其中 $d_0…d_n$ 是这个进制系统中的符号
\(d_md_{m-1}...d_3d_2d_1d_0\)
右边第一位实际上是代表有多少个 $n^0$，右边第二位代表的是有多少个 $n^1$，右边第三位代表有多少个 $n^2$，以此类推</p>

<p>所以它对应的十进制数就是 
\(d_0\cdot n^0 +. d_1 \cdot n^1 + ... +. d_m\cdot n^m\)</p>

<p>举个例子
\(\begin{equation}
\begin{aligned}
123_8 &amp;= 3\cdot 8^0 + 2 \cdot 8^1 + 1\cdot 8^2 \\
&amp;= 3 + 16 + 64 \\
&amp;= 83\end{aligned}
\end{equation}\)</p>

<h3 id="12-十进制转-n-进制">1.2 十进制转 N 进制</h3>

<p>这里我们不介绍数学原理（其实可以由上面的 (2) 式拓展推），直接介绍方法。比如说，我们要将 <u>**1384 转换成 7 进制**</u>的数。我们需要不断对这个数用 7 去除，然后记录余数。</p>

\[\begin{equation}
\begin{aligned}
1384\quad /\quad 7 &amp;= 197 &amp;余数\quad 5 \\ 
197 \quad /\quad  7 &amp;= 28 &amp;余数\quad  1\\
28 \quad /\quad  7 &amp;=4  &amp;余数\quad  0\\
4\quad  /\quad  7 &amp;= 0  &amp;余数\quad  4
\end{aligned}
\end{equation}\]

<p>然后把所有余数倒过来排列，$4015_7$ 就是我们所要的结果。</p>

<h3 id="13-快速换算">1.3 快速换算</h3>

<p>理论上来说，掌握 1.1 和 1.2 可以让你解决所有题目了。但有些问题如果想深一步，可以用更加快捷的方式去进行解答。请先思考以下问题，我们知道一个：</p>

<ol>
  <li>一个二进制位能表示多少种不同的状态？</li>
  <li>一个十六进制位能表示多少种不同的状态？</li>
  <li>四个二进制位能表示多少种不同的状态？</li>
</ol>

<p>一个二进制位可以表示 <code class="language-plaintext highlighter-rouge">2</code> 种状态，所以四个二进制位可以表示 <code class="language-plaintext highlighter-rouge">2*2*2*2=16</code> 种状态；而一个十六进制位也刚好能表示 <code class="language-plaintext highlighter-rouge">16</code> 种状态。</p>

<p>换句话说，一个十六进制位等价于四个二进制位。所以如果在十六进制位和二进制位互相转换时，我们可以利用这个特性。</p>

<h4 id="131-十六进制到二进制">1.3.1 十六进制到二进制</h4>

<p>十六进制的每个字符都可以转化成4个二进制字符，因为它的基数16相当于$2^4$。</p>

<blockquote>
  <p>例子：
\(4B7_{16} \rightarrow \begin{array} {c:c:c}
0100 &amp; 1011 &amp; 0111
\end{array} \rightarrow 10010110111_{2}\)</p>
</blockquote>

<h4 id="132-八进制到二进制">1.3.2 八进制到二进制</h4>

<p>同样的原理，我们可以利用 $8=2^3$ 这个事实，用三个二进制位代表一个八进制位。</p>

<p>八进制与二进制之间的转化与十六进制与二进制之间的转化相似，因为基数8相当于$2^3$。</p>

<blockquote>
  <p>例子：
\(363_8 = \begin{array}{c:c:c}011 &amp; 110 &amp; 011\end{array} = 11110011_2\)</p>
</blockquote>

<h4 id="133-十六进制与八进制互相转化">1.3.3 十六进制与八进制互相转化</h4>

<p>虽然 16 和 8 不存在上面所说的关系，但是他们都是2的幂，所以我们可以把这两个进制的数先转成二进制，然后重新分组，进行快速的转化。</p>

<p>将要转化的数字先转成二进制，然后对二进制的数位重新分割</p>

<blockquote>
  <p>例子：
\(\begin{aligned}
&amp;3FD7_{16}\\
&amp;=\begin{array}{c:c:c:c}0011 &amp; 1111 &amp; 1101 &amp; 0111\end{array}_2\\
&amp;=11111111010111_2\\
&amp;=\begin{array}{c:c:c:c}0 &amp; 011 &amp; 111 &amp; 111 &amp; 010 &amp; 111\end{array}_2\\
&amp;=37727_{8}
\end{aligned}\)</p>
</blockquote>

<h4 id="134-选修-推广互为乘方的进制间转">1.3.4 [选修] 推广：互为乘方的进制间转</h4>

<p>相似的做法可以在base互为乘方的数字之间使用，例如在 9-base 与 3-base 之间也可以用这个方法</p>

<blockquote>
  <p>例子：
\(458_9 = \begin{array}{c:c:c}11&amp;12&amp;22\end{array} = 111222_3\)</p>
</blockquote>

<h3 id="14-选修-n进制计算">1.4 [选修] n进制计算*</h3>

<p>大部分情况下，我们会使用常规的做法，把式子中所有的数转换成十进制数，用我们最熟悉的十进制做计算，再把结果转换回相应的进制。</p>

<p>但是有些时候我们也可以直接在n进制下进行运算。这是一个进阶内容，如果你对进制系统的理解足够好，那么有些情况下可以加速计算。对于大部分同学而言，可以略过这个部分，并不会影响你做题的效率。</p>

<p>其实规则也很简单，和十进制的运算做类比</p>

<ol>
  <li>加法时逢 n 进 1</li>
  <li>减法时遇到不够减的，可以向左边一位借1，借回来的当 n 使用</li>
</ol>

<h4 id="141-n进制的加减法熟练运用竖式-vertical-calculation">1.4.1 n进制的加减法（熟练运用竖式 vertical calculation</h4>

<ol>
  <li>
    <p>同样进制的加减法</p>

\[3B7_{16} + 1A_{16} = 3D1_{16}\]

\[\begin{matrix}
&amp;3 &amp; B &amp; 7_{16} \\
+&amp; &amp; 1 &amp; A_{16} \\
\hline
&amp;3 &amp; D &amp; 1_{16}
\end{matrix}\]

    <blockquote>
      <p>Example - Senior 16, 26</p>
    </blockquote>
  </li>
  <li>
    <p>转换回十进制进行计算</p>
  </li>
  <li>
    <p>转换回二进制进行计算</p>

\[123_{16} + 12_{10} + 16_{8} = 475_{8} \\
\downarrow\\
100100011_2 + 1100_2 + 1110_2 = 100111101_{2}\]

\[\begin{matrix}
&amp;1&amp;0010&amp;0011\\
+&amp;&amp;&amp;1100\\
\hline
&amp;1&amp;0010&amp;1111\\
+&amp;&amp;&amp;1110\\
\hline
&amp;1&amp;0011&amp;1101
\end{matrix}\]
  </li>
</ol>

<h4 id="142-n进制乘除法">1.4.2 n进制乘除法</h4>

<ol>
  <li>
    <p>转换回十进制计算</p>

\[101_2 \times 32_8 = 202_8\\
\downarrow\\
5\times 26 = 130\]
  </li>
  <li>
    <p>位移</p>

    <p>$n$ 进制的数字乘上$n$ 相当于在后面加上一个0，除以$n$ 相当于在后面减少一个0</p>

\[8_{10} \times 100101_2 = 450_8\\
\downarrow\\
8_{10} \times 45_8 = 450_8\]

    <blockquote>
      <p>Example: Senior 9, 10, 23</p>
    </blockquote>
  </li>
</ol>

<p><strong>miscellaneous</strong></p>

<p>Palindrome 回文 - 顺读和倒读都一样的数字</p>

<blockquote>
  <p>Example Senior 29, Intermediate 17</p>
</blockquote>

<h3 id="15-题目">1.5 题目</h3>

<p>以下是按照出题形式分类的题号表</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>Senior</th>
      <th>Intermediate</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>解方程</td>
      <td>1, <strong>3</strong>, 9, <strong>10</strong>, 12, 13, 14, 17, 18, 20, 23, 25, <br />26, 32, 34, 35, 39</td>
      <td>2, 3, 4, 8, 10, 21, 24, 25, 26</td>
    </tr>
    <tr>
      <td>枚举</td>
      <td>2, 7, 11, 31, (28), 36</td>
      <td>4, 7, 15, 18, 19, 22, 29, 30, 35, 37, 38</td>
    </tr>
    <tr>
      <td>找规律</td>
      <td>4, 40</td>
      <td> </td>
    </tr>
    <tr>
      <td>回文</td>
      <td>5, 21, 27, 29</td>
      <td>17, 27</td>
    </tr>
    <tr>
      <td>计算</td>
      <td>6, 8, 15, 16, 19, 33, 38</td>
      <td>6, 11, 12, 14, 20, 23, 28, 33, 34</td>
    </tr>
    <tr>
      <td>比较</td>
      <td>24, 37</td>
      <td>13, 32</td>
    </tr>
    <tr>
      <td>进制转化</td>
      <td> </td>
      <td>1, 9, 16, 31</td>
    </tr>
    <tr>
      <td>杂项</td>
      <td>22, 30</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h4 id="151-senior-组题目">1.5.1 Senior 组题目</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-VhQz96-bCssaydyQ?e=8EjJhd'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193249&amp;authkey=AAJIVFEfo22sqMs&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no">
    The browser you are using does not support iframe. Download .doc file here <a href="https://1drv.ms/w/s!AtCdnSj9ls2qi-VhQz96-bCssaydyQ?e=8EjJhd">Link</a>
</iframe>
<h4 id="152-intermediate-组题目">1.5.2 Intermediate 组题目</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-VjqtCqHasYuC77wA?e=6FGaHT'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193251&amp;authkey=ACoK0BPIY96JOiM&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no">
The browser you are using does not support iframe. Download .doc file here <a href="https://1drv.ms/w/s!AtCdnSj9ls2qi-VjqtCqHasYuC77wA?e=6FGaHT">Link</a>
</iframe>

<h2 id="2-递归函数">2. 递归函数</h2>

<h3 id="21-题型分类">2.1 题型分类</h3>

<p>递归函数的题目主要有以下几种题型：</p>

<ol>
  <li>
    <p>传统类型</p>

    <blockquote>
      <p>Intermediate 3, 8 （一个变量），Intermediate 2 （两个变量）</p>
    </blockquote>
  </li>
  <li>
    <p>$n$ 推 $n + 1$</p>

    <blockquote>
      <p>Intermediate 14</p>
    </blockquote>
  </li>
  <li>
    <p>应用题（自己推出来recursive function</p>

    <blockquote>
      <p>Intermediate 10, 16</p>
    </blockquote>
  </li>
</ol>

<h3 id="22-传统类型">2.2 传统类型</h3>

<blockquote>
  <p>Example - Find $f(8)$
\(f(x) = 
\begin{cases}
f(f(x-3)) + 4, \quad x&gt;4\\
x^2 - 3, \quad x \leq 4
\end{cases}\)</p>
</blockquote>

<p>可以先尝试自己做一下，如果做对了，可以直接快进到下一个section。</p>

<p>如果没做对，可以参考使用下面的方法：</p>

<ol>
  <li>
    <p>先展开 $f(x)$ 的表达式，如果有递归的话先不着急往下递归
\(f(8) = f(f(5)) + 4\)</p>
  </li>
  <li>
    <p>如果刚刚的表达式中有递归的函数，展开递归到的函数的表达式
\(f(5) = f(f(2)) + 4\)</p>

\[f(2) = 2^2-3 = 1\]
  </li>
  <li>
    <p>如果递归到底部（表达式中没有递归的式子了，也就是说表达式可以求出来值了），直接算出来以后开始一层一层往回带
\(f(5) = f(f(2)) + 4 = f(1) + 4\\
\uparrow\\
f(2) = 1\)</p>
  </li>
  <li>
    <p>往回带的时候如果遇到新的递归函数，回到第二步
\(f(5) = f(1) + 4=-2 + 4=2\\
\downarrow\quad\quad\quad\quad\quad \uparrow\\
f(1) = 1^2 - 3 = -2\)</p>
  </li>
  <li>
    <p>重复2 - 4，直到算出来最后的结果为止
\(\begin{aligned}
f(8) = f(&amp;f(5)) + 4 = f(2) + 4 = 1 + 4 = 5\\
&amp;\downarrow\quad\quad\quad\quad\uparrow\\
f(5) = f(&amp;f(2)) + 4 =\quad f(1) + 4= -2 + 4 = 2\\
&amp;\downarrow\quad\quad\quad\uparrow\quad\quad\downarrow\quad\quad\uparrow\\
f(2) &amp;= 2^2 - 3 = 1\;\; f(1) = 1^2 - 3 = -2
\end{aligned}\)</p>
  </li>
</ol>

<p>计算递归函数实际上是一个很机械的过程，只要细心把自己的草稿纸维护的比较整洁有条理一般不会出错</p>

<h3 id="23-题目">2.3 题目</h3>

<h4 id="232-senior-组题目">2.3.2 Senior 组题目</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-Z0uHoGaF9uHFTOIg?e=KHYK0e'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193396&amp;authkey=AHQso1HF03LenhI&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>

<h4 id="232-intermediate-组题目">2.3.2 Intermediate 组题目</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-Z3kx-d2emgUX8ykA?e=DWk2Gv'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193399&amp;authkey=ACHj_Ox41S9VFY4&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>

<h2 id="3-伪代码-what-does-this-program-do-wdtpd">3. 伪代码 What Does this Program Do (WDTPD)</h2>

<blockquote>
  <p>官方的链接</p>

  <p>http://www.categories.acsl.org/wiki/index.php?title=What_Does_This_Program_Do%3F</p>
</blockquote>

<h3 id="31-介绍">3.1 介绍</h3>

<p>这里主要是考验大家阅读伪代码 Pseudocode 的能力，伪代码不是任何一种可以运行的语言，但是可以让我们不管语言的具体语法而理解算法/程序的逻辑</p>

<h3 id="32-伪代码语法运算符">3.2 伪代码语法/运算符</h3>

<h4 id="321-运算符">3.2.1 运算符</h4>

<table>
  <thead>
    <tr>
      <th>Code Segment</th>
      <th>Meaning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">!</code></td>
      <td>not 非运算</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">^</code> or <code class="language-plaintext highlighter-rouge">↑</code></td>
      <td>exponent 指数</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%</code></td>
      <td>modulus 求余（取模）</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&amp;&amp;</code></td>
      <td>logical and 逻辑与运算</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">||</code></td>
      <td>logical or 逻辑或运算</td>
    </tr>
  </tbody>
</table>

<h4 id="322-函数">3.2.2 函数</h4>

<table>
  <thead>
    <tr>
      <th>Code Segment</th>
      <th>Meaning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">ABS(n)</code></td>
      <td><code class="language-plaintext highlighter-rouge">n</code>的绝对值</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">INT(n)</code></td>
      <td><code class="language-plaintext highlighter-rouge">n</code>向下取整</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">SQRT(n)</code></td>
      <td><code class="language-plaintext highlighter-rouge">n</code> 的平方根</td>
    </tr>
  </tbody>
</table>

<h4 id="323-数组">3.2.3 数组</h4>

<table>
  <thead>
    <tr>
      <th>Code Segment</th>
      <th>Meaning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">dim a(n)</code></td>
      <td>创建一个一维，大小为<code class="language-plaintext highlighter-rouge">n</code>的数组<code class="language-plaintext highlighter-rouge">a</code>，<em>index 从0或1开始计算</em></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">a(x, y)</code></td>
      <td>返回二维数组<code class="language-plaintext highlighter-rouge">a</code>中第<code class="language-plaintext highlighter-rouge">x</code> 行<code class="language-plaintext highlighter-rouge">y</code>列的元素</td>
    </tr>
  </tbody>
</table>

<h4 id="324-字符串操作">3.2.4 字符串操作</h4>

<table>
  <thead>
    <tr>
      <th>Code Segment</th>
      <th>Meaning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">S = "Example String"</code></td>
      <td>创建一个字符串（可以包含0或多个字符），index 从0开始计算</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">len(S)</code></td>
      <td>字符串<code class="language-plaintext highlighter-rouge">S</code>的长度</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">S[0]</code></td>
      <td>字符串<code class="language-plaintext highlighter-rouge">S</code>的第0位 （在我们的例子里面，<code class="language-plaintext highlighter-rouge">S[0] -&gt; "E"</code>）</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">S[:3]</code></td>
      <td>字符串的前3位（在我们的例子李，<code class="language-plaintext highlighter-rouge">S[:3] -&gt; "Exa"）</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">S[11:]</code></td>
      <td>字符串从第11位到结尾的值，包括第11位（在我们的例子里，<code class="language-plaintext highlighter-rouge">S[11:] = ring</code>）</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">S[2:5]</code></td>
      <td>字符串的第2位到第<strong>4</strong>位，注意不包括第5位</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">S + "abc"</code></td>
      <td>拼接<code class="language-plaintext highlighter-rouge">"abc"</code>在<code class="language-plaintext highlighter-rouge">S</code>后面</td>
    </tr>
  </tbody>
</table>

<h4 id="325-代码逻辑语句">3.2.5 代码逻辑语句</h4>

<table>
  <thead>
    <tr>
      <th>Code Segment</th>
      <th>Meaning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">IF ... THEN ... (ELSE ...)</code></td>
      <td><code class="language-plaintext highlighter-rouge">if</code>语句</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">WHILE ... END WHILE</code></td>
      <td>不定循环语句</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">FOR x=start TO end STEP increment</code><br /><code class="language-plaintext highlighter-rouge">...</code><br /><code class="language-plaintext highlighter-rouge">NEXT x</code></td>
      <td>确定循环次数的循环</td>
    </tr>
  </tbody>
</table>

<h3 id="33-题型">3.3 题型</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>Questions</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1. 各个变量的变化</td>
      <td>Intermediate 1, 3, 5, 7, 9, 11<br />*第五题和第七题的答案反了</td>
    </tr>
    <tr>
      <td>2. For loop 循环 (Array 题型)</td>
      <td>Intermediate 2, 4, 6, 8, 10, 12</td>
    </tr>
  </tbody>
</table>

<h3 id="34-做题方法">3.4 做题方法</h3>

<p>WDTPD题型一般出现在ACSL最后一道题，代码会比较长，所以一种方法是在纸上面记录下来所有变量现在的值，这样可以尽可能减少出错的概率</p>

<h3 id="35-题目">3.5 题目</h3>

<p>Senior 和 Intermediate 都做下面这份习题</p>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-gDEmOZtc7IxRRjZw?e=dFebSP'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193539&amp;authkey=AGk-GuN2yhe4Xh4&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>

<h2 id="4-编程题">4. 编程题</h2>

<h3 id="41-java中进制转化的方法">4.1 Java中进制转化的方法</h3>

<h4 id="411-dec-to-oct">4.1.1 Dec to Oct</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="mi">8</span> <span class="o">+</span> <span class="mi">4</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">octNumber</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toOctalString</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">octNumber</span><span class="o">);</span>
</code></pre></div></div>

<p>Output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>14
</code></pre></div></div>

<h4 id="412-dec-to-hex">4.1.2 Dec to Hex</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="mi">16</span> <span class="o">+</span> <span class="mi">12</span>
<span class="nc">String</span> <span class="n">hexNumber</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toHexString</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hexNumber</span><span class="o">);</span>
</code></pre></div></div>

<p>Output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1C
</code></pre></div></div>

<h2 id="5-练习题答案">5. 练习题答案</h2>

<h3 id="51-computer-number-system">5.1 Computer Number System</h3>

<h4 id="511-intermediate-solution">5.1.1 Intermediate Solution</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/b/s!AtCdnSj9ls2qi-lePqAJVQsUIAFnow?e=YmbNgB'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193758&amp;authkey=ALn1MThvk3R-_wo&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>

<h4 id="512-senior-solution">5.1.2 Senior Solution</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/b/s!AtCdnSj9ls2qi-lf8GvyntWwdhBRmw?e=rcq1hc'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193759&amp;authkey=AHjf5cTBp5YcGh8&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>

<h3 id="52-recursive-function">5.2 Recursive Function</h3>

<h4 id="521-intermediate-solution">5.2.1 Intermediate Solution</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-ljI7REIrqC9Fi1fQ?e=60A8eE'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193763&amp;authkey=AE98N3D5f2CpUTE&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>

<h4 id="522-senior-solution">5.2.2 Senior Solution</h4>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-lhkItokK8ertB-zg?e=wA78vZ'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193761&amp;authkey=ANvW-Mbw5RD7N94&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>

<h3 id="53-what-does-this-program-do">5.3 What Does This Program Do</h3>

<div class="simple-card" onclick="window.location.href='https://1drv.ms/w/s!AtCdnSj9ls2qi-lmwUeqHExC9MED4g?e=mCcwWj'">
⚠如果下面的文档无法显示，点击这里下载文件
</div>

<iframe src="https://onedrive.live.com/embed?cid=AACD96FD289D9DD0&amp;resid=AACD96FD289D9DD0%21193766&amp;authkey=ALmkYdvUXAMdXOE&amp;em=2" width="100%" height="288" frameborder="0" scrolling="no"></iframe>
:ET